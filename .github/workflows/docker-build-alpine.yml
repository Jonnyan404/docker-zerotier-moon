name: 构建并推送Alpine版本Docker镜像

on:
#   push:
#     branches: [ main, master ]
#     tags: [ 'v*' ]
#     paths:
#       - 'Dockerfile.alpine'
#       - 'startup.sh'
#       - '.github/workflows/docker-build-alpine.yml'
#   pull_request:
#     branches: [ main, master ]
#     paths:
#       - 'Dockerfile.alpine'
#       - 'startup.sh'
  workflow_dispatch:  # 手动触发
    inputs:
      ZT_VERSION:
        description: 'ZeroTier版本号 (例如: 1.10.2-r0)'
        required: true
        default: '1.10.2-r0'
      USE_LATEST_TAG:
        description: '是否同时添加latest标签'
        type: boolean
        required: true
        default: false    

env:
  REGISTRY_DOCKER: docker.io
  REGISTRY_GITHUB: ghcr.io
  IMAGE_NAME_DOCKER: jonnyan404/zerotier-moon
  IMAGE_NAME_GITHUB: ${{ github.repository_owner }}/zerotier-moon

jobs:
  build-and-push-alpine:
    name: 构建并推送Alpine版本
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v2

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 准备自定义镜像标签
        id: custom_tags
        run: |
          # 始终添加 ZT_VERSION 作为标签
          echo "TAGS=${{ github.event.inputs.ZT_VERSION }}" >> $GITHUB_OUTPUT
          
          # 如果选择了添加 latest 标签，则添加
          if [ "${{ github.event.inputs.USE_LATEST_TAG }}" = "true" ]; then
            echo "TAGS=${{ github.event.inputs.ZT_VERSION }},latest" >> $GITHUB_OUTPUT
          fi

      - name: 提取元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_DOCKER }}/${{ env.IMAGE_NAME_DOCKER }}
            ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME_GITHUB }}
          tags: |
            type=raw,value=alpine-${{ steps.custom_tags.outputs.TAGS }}
            type=raw,value=alpine

      - name: 登录到DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_DOCKER }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 登录到GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 构建并推送镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.alpine
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ZT_VERSION=${{ github.event.inputs.ZT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max